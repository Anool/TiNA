$fn=100;

mm = 1;
inch = 25.4 * mm;

LENGTH = 1 * inch;
WIDTH = 1 * inch;
HEIGHT = 1 * inch;
THICKNESS = .2 * inch;
OFFSET = .5 * inch;

HEX_R = 6.1 * mm;
HEX_r = 5.6/2 * mm;
HEX_THICKNESS = 2 * mm;
module hex(){
  difference(){
    cylinder(r=HEX_R, h=HEX_THICKNESS);
    for(i=[0, 1, 2, 3, 4, 5]){
      rotate(a=60 * i, v=[0, 0, 1])
      translate([HEX_r, -5, 5])rotate(a=90, v=[0, 1, 0])cube([10, 10, HEX_THICKNESS]);
    }
  }
}

module corner(){
intersection(){
difference(){
  cube([LENGTH, WIDTH, HEIGHT]);
  translate([THICKNESS, THICKNESS, THICKNESS])
    cube([LENGTH, WIDTH, HEIGHT]);
  translate([OFFSET, OFFSET, 0])
    translate([0, 0, -1])
    cylinder(r=1.5*mm, h=2 * THICKNESS);
  translate([OFFSET, 0, OFFSET])
    rotate(v=[-1, 0, 0], a=90) 
    translate([0, 0, -1])
    cylinder(r=1.5*mm, h=2 * THICKNESS);
  translate([0, OFFSET, OFFSET])
    rotate(v=[0, 1, 0], a=90)
    translate([0, 0, -1])
    cylinder(r=1.5*mm, h=2 * THICKNESS);
 }

union(){
  rotate(v=[0, 0, -1], a=0)cylinder(r=LENGTH*1.02, h=THICKNESS);
  rotate(v=[-1,0, 0], a=90)cylinder(r=LENGTH*1.02, h=THICKNESS);
  rotate(v=[0, 1, 0], a=90)cylinder(r=LENGTH*1.02, h=THICKNESS);
}
}
}
// corner();
hex();
